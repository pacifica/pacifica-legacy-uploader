-include Makefile.local

OS = Windows

MINGWBINDIR ?= /c/QtSDK/mingw/bin
QTBINDIR ?= /c/QtSDK/Desktop/Qt/4.8.1/mingw/bin
QTPLUGINSDIR ?= /c/QtSDK/Desktop/Qt/4.8.1/mingw/plugins

PKGCONFIG ?= /c/pkg-config
PKGCONFIGBIN := $(PKGCONFIG)/bin

#$WIX is defined in the WIX MSI installer as "C:\Program Files (x86)\WiX Toolset v3.6\"
#MSys can properly use this path.
#If WiX was installed manually (e.g. zip extract to c:\wix), uncomment:
#WIX = /c/wix
WIXBIN := $(WIX)bin

#$PACIFICASDK is set by pacificaauthsdk.msi, however it uses backslashes and drive letters.
#The go command is unable to deal with a mixture of Windows and Unix paths set in GOPATH, so we 
#set it manually here.  If pacificaauthsdk.msi places PACIFICASDK in a different location
#(it can), set it here.
PACIFICASDK ?= /c/PacificaSDK

SQLITEDIR ?= /c/sqlite3

QMAKE ?= qmake

GOROOT ?= /c/Go
GOROOTBIN := $(GOROOT)/bin

SQLITEDLLS ?= sqlite3.dll
ARCHIVEDIR ?= $(MINGWBINDIR)
ARCHIVEDLLS ?= libarchive-2.dll libexpat-1.dll liblzma-1.dll libbz2-2.dll libz-1.dll
GCCDLLS ?= libgcc_s_dw2-1.dll mingwm10.dll libstdc++-6.dll
QTDLLS ?= QtCore4.dll qtGui4.dll QtXml4.dll QtNetwork4.dll QtWebKit4.dll QtSvg4.dll
PACIFICASDKDLLS ?= QtSolutions_Service.dll
MSIHEADERS ?= msi.h msiquery.h
MSILIBS ?= msi.lib

PACIFICAAUTHDIR ?= $(PACIFICASDK)

MSISDK ?= /c/Program\ Files/Microsoft\ SDKs/Windows/v7.1

export GOPATH := $(CURDIR)/go:$(PACIFICASDK)/go:$(GOROOT)
export PKG_CONFIG_PATH := $(PACIFICASDK)/lib/pkgconfig
export C_INCLUDE_PATH := $(SQLITEDIR):$(CURDIR)/qmake/libpacificauploaderserver
export LIBRARY_PATH := $(SQLITEDIR):$(CURDIR)/qmake/libpacificauploaderserver/debug
export PATH := $(MINGWBINDIR):$(QTBINDIR):$(PKGCONFIGBIN):$(GOROOTBIN):$(WIXBIN):$(PACIFICASDK):$(PATH)

printsettings:
	@echo ARCHIVEDIR="$(ARCHIVEDIR)"
	@echo ARCHIVEDLLS="$(ARCHIVEDLLS)"
	@echo MINGWBINDIR="$(MINGWBINDIR)"
	@echo QTBINDIR="$(QTBINDIR)"
	@echo GOPATH=$(GOPATH)
	@echo PATH="$(PATH)"
	@echo LIBRARY_PATH="$(LIBRARY_PATH)"
	@echo C_INCLUDE_PATH="$(C_INCLUDE_PATH)"
	@echo PKG_CONFIG_PATH="$(PKG_CONFIG_PATH)"
	
pacificauploader.wxs: pacificauploader.wxs.in
	sed "s/@VERSION@/$(VERSION)/g" < pacificauploader.wxs.in > pacificauploader.wxs

pacificauploaderui.wxs: pacificauploaderui.wxs.in
	sed "s/@VERSION@/$(VERSION)/g" < pacificauploaderui.wxs.in > pacificauploaderui.wxs

pacificauploadersdk.wxs: pacificauploadersdk.wxs.in
	sed "s/@VERSION@/$(VERSION)/g" < pacificauploadersdk.wxs.in > pacificauploadersdk.wxs
	
pacificauploaderall.wxs: pacificauploaderall.wxs.in
	sed "s/@VERSION@/$(VERSION)/g" < pacificauploaderall.wxs.in > pacificauploaderall.wxs

build-prep-early:
	#test ! -d build && mkdir build || true
	#test ! -d build/iconengines && mkdir -p build/iconengines || true
	#test ! -d build/imageformats && mkdir -p build/imageformats || true
	#test ! -d msisdk && mkdir msisdk || true

build-prep: build-prep-early printsettings
	cd qmake && $(QMAKE) -recursive
	
	mkdir -p build/release/iconengines
	mkdir -p build/release/imageformats
	mkdir -p build/lib/pkgconfig
	mkdir -p build/release
	
	# new copying to the release directory.
	for p in $(PACIFICASDKDLLS); do cp -u $(PACIFICASDK)/bin/$$p build/release; done
	for p in $(GCCDLLS); do cp -u $(MINGWBINDIR)/$$p build/release; done
	for p in $(QTDLLS); do cp -u $(QTBINDIR)/$$p build/release; done
	for p in $(SQLITEDLLS); do cp -u $(SQLITEDIR)/$$p build/release; done
	for p in $(ARCHIVEDLLS); do cp -u $(ARCHIVEDIR)/$$p build/release; done
	for p in $(PACIFICASDKDLLS); do cp -u $(PACIFICASDK)/bin/$$p build/release; done
	for p in $(MSIHEADERS); do cp -u $(MSISDK)/include/$$p msisdk; done
	for p in $(MSILIBS); do cp -u $(MSISDK)/lib/$$p msisdk; done
	
	cp -u qtsolutionsservice.pc.win build/lib/pkgconfig/qtsolutionsservice.pc
	cp -u $(PACIFICAAUTHDIR)/bin/pacificaauth.dll build/release
	cp -u $(QTPLUGINSDIR)/iconengines/qsvgicon4.dll build/release/iconengines/qsvgicon4.dll
	cp -u $(QTPLUGINSDIR)/imageformats/qsvg4.dll build/release/imageformats/qsvg4.dll
	
	
	# Older stuff
	#for p in $(MSIHEADERS); do cp -u $(MSISDK)/include/$$p msisdk; done
	#for p in $(MSILIBS); do cp -u $(MSISDK)/lib/$$p msisdk; done
	#cp -u $(PACIFICAAUTHDIR)/bin/pacificaauth.dll build
	#for p in $(ARCHIVEDLLS); do cp -u $(MINGWBINDIR)/$$p build; done
	#for p in $(GCCDLLS); do cp -u $(MINGWBINDIR)/$$p build; done
	#for p in $(QTDLLS); do cp -u $(QTBINDIR)/$$p build; done
	#for p in $(PACIFICASDKDLLS); do cp -u $(PACIFICASDK)/bin/$$p build; done
	#cp -u $(QTPLUGINSDIR)/iconengines/qsvgicon4.dll build/iconengines/qsvgicon4.dll
	#cp -u $(QTPLUGINSDIR)/imageformats/qsvg4.dll build/imageformats/qsvg4.dll
	#for p in $(SQLITEDLLS); do cp -u $(SQLITEDIR)/$$p build; done
	#test -f msisdk/msi.lib || cp -a msisdk/libmsi.a msisdk/msi.lib

build-qmake:
	cd qmake && make
	cd qmake && make install

build-go: pacificauploaderuserd pacificauploaderd

pacificauploaderd: build-prep-early go/src/pacificauploaderd/common/version.go
	echo $(GOPATH)
	go install pacificauploaderd
	cp -u go/bin/pacificauploaderd.exe build/release

pacificauploaderuserd: build-prep-early
	echo $(GOPATH)
	go install pacificauploaderuserd
	cp -u go/bin/pacificauploaderuserd.exe build/release

check: check-common

run-tests: build-tests
	cmd /c run-tests.bat


build-csharp:
	cd csharp/winhelper/PacificaUploaderService && cmd /c build.cmd

build-final:
	cp -u go/bin/pacificauploaderuserd.exe build/release

build-all: build-prep build-qmake build-go build-tests build-final

msi: msis

msis: clean all pacificauploader.wxs pacificauploaderui.wxs pacificauploadersdk.wxs pacificauploaderall.wxs check
	test -f pacificauploader.msi && rm pacificauploader.msi || true
	test -f pacificauploaderui.msi && rm pacificauploaderui.msi || true
	test -f pacificauploadersdk.msi && rm pacificauploadersdk.msi || true
	cmd /c scripts\\bundle.bat
	
	#heat dir "go\src\pacificauploaderd\ui" -cg PacificaUploaderUI -gg -sfrag -dr INSTALLDIR -var var.DaemonUI -out pacificauploaderuigen.wxs
	#candle -ext WiXNetFxExtension pacificauploader.wxs pacificauploaderuigen.wxs -dDaemonUI=go\src\pacificauploaderd\ui -ext WixUtilExtension
	#light -ext WiXNetFxExtension -out pacificauploader.msi pacificauploader.wixobj pacificauploaderuigen.wixobj -ext WixUtilExtension
	#candle pacificauploaderui.wxs
	#light -out pacificauploaderui.msi pacificauploaderui.wixobj -ext WixUtilExtension
	#candle pacificauploadersdk.wxs
	#light -out pacificauploadersdk.msi pacificauploadersdk.wixobj
